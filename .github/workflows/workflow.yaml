name: CI/CD Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [main, dev]

env:
  SRC_PROJECT_FOLDER: "src"
  SRC_PROJECT_TESTS: "tests"
  SRC_PYTHON_VERSION: "3.11"

jobs:
  setup-lint-test:
    name: Setup, Lint, Test, and Secure Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Python & Install Dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{ env.SRC_PYTHON_VERSION }}
          uv-group: "pipeline"
          uv-extra: "--all-extras"

      - name: Lint Code (ruff, Mypy, Complexipy)
        uses: ./.github/actions/lint-code
        with:
          src-project-folder: ${{ env.SRC_PROJECT_FOLDER }}

      - name: Run Bandit Security Scan
        uses: ./.github/actions/security
        with:
          src-project-folder: ${{ env.SRC_PROJECT_FOLDER }}
          src-exclude: ${{ env.SRC_PROJECT_TESTS }}

  create-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Create Release
    runs-on: ubuntu-latest
    needs: setup-lint-test

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python & Install Dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{ env.SRC_PYTHON_VERSION }}
          uv-group: "pipeline"

      - name: Get Version
        id: version
        uses: ./.github/actions/obtain-version

      - name: Create Release
        id: release
        uses: ./.github/actions/create-release
        with:
          version: ${{ steps.version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Summary
        run: |
          echo "# Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.release.outputs.version  }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Created:** ${{ steps.release.outputs.created  }}" >> $GITHUB_STEP_SUMMARY
